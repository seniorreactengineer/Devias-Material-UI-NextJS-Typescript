import { string } from "yup/lib/locale";

export type LineItem = {
  id: string;
  orderId: string;
  articleId: string;
  taxId: string;
  taxRate: string;
  statusId: number;
  articleDetailID: string;
  number: string;
  articleNumber: string;
  price: string;
  quantity: string;
  articleName: string;
  shipped?: string;
  shippedGroup?: string;
  releaseDate?: string;
  mode?: string;
  esdArticle?: string;
  config?: string;
  ean?: string;
  unit?: string;
  packUnit?: string;
  attribute?: Object;
};

export type CustomerGroup = {
  id: string;
  key: string;
  name: string;
  tax: boolean;
  taxInput: boolean;
  mode: boolean;
  discount: number;
  minimumOrder: number;
  minimumOrderSurcharge: number;
  discounts: [];
};
export type Payment = {
  id: string;
  name: string;
  description?: string;
  template?: string;
  class?: string;
  table?: string;
  hide: boolean;
  additionalDescription?: string;
  debitPercent?: number;
  surcharge?: number;
  surchargeString?: string;
  position?: number;
  active?: boolean;
  esdActive?: boolean;
  mobileInactive?: boolean;
  embedIFrame?: string;
  hideProspect?: number;
  action?: string;
  pluginId?: string;
  source?: string;
  attribute?: {
    id: string;
    paymentId: string;
    swagPaypalUnifiedDisplayInPlusIframe?: string;
    swagPaypalUnifiedPlusIframePaymentLogo?: string;
  };
};

export type Status = {
  id: string;
  name: string;
  position: number;
  group: string;
  sendMail?: number;
};

export type Customer = {
  number: string;
  id: string;
  changed: string;
  paymentId: string;
  groupKey: string;
  shopId: string;
  priceGroupId: string;
  encoderName: string;
  hashPassword: string;
  active: boolean;
  email: string;
  firstLogin: string;
  lastLogin: string;
  accountMode?: number;
  confirmationKey?: string;
  sessionId: string;
  newsletter?: number;
  validation?: string;
  affiliate?: number;
  paymentPreset?: number;
  languageId?: string;
  referer?: string;
  internalComment?: string;
  failedLogins?: number;
  lockedUntil?: string;
  salutation: string;
  title?: string;
  firstname: string;
  lastname: string;
  birthday?: string;
  doubleOptinRegister?: boolean;
  doubleOptinEmailSentDate?: string;
  doubleOptinConfirmDate?: string;
  passwordChangeDate?: string;
  registerOptInId?: string;
};

type PaymentInstance = {
  id: string;
  orderId: string;
  firstName: string;
  lastName: string;
  address?: string;
  zipCode?: string;
  city?: string;
  bankName?: string;
  bankCode?: string;
  accountNumber?: string;
  accountHolder?: string;
  bic?: string;
  iban?: string;
  amount: string;
  createdAt: string;
};

export type Shipping = {
  id: string;
  userId: string;
  orderId: string;
  company?: string;
  department?: string;
  salutation: string;
  firstName: string;
  lastName: string;
  street: string;
  zipCode: string;
  city: string;
  phone?: string;
  countryId: number;
  stateId?: number;
  additionalAddressLine1: string;
  additionalAddressLine2?: string;
  title?: string;
  customerId?: string;
  country: Country;
  attribute: Object;
  state?: string;
};

type Country = {
  id: string;
  name: string;
  iso: string;
  isoName: string;
  position: number;
  description: string;
  taxFree?: boolean;
  taxFreeUstId?: boolean;
  taxFreeUstIdChecked?: boolean;
  active?: boolean;
  iso3: string;
  displayStateInRegistration?: boolean;
  forceStateInRegistration?: boolean;
  allowShipping?: boolean;
  areaId?: string;
};

export type Billing = {
  id: string;
  userId: string;
  orderId: string;
  customerId?: string;
  company?: string;
  department?: string;
  salutation?: string;
  customerNumber: string;
  firstName: string;
  lastName: string;
  street: string;
  zipCode: string;
  city: string;
  phone?: string;
  countryId: number;
  stateId?: number;
  ustId?: number;
  number?: string;
  additionalAddressLine1: string;
  additionalAddressLine2?: string;
  title?: string;
  vatId?: string;
  state?: string;
  attribute?: Object;
  country: Country;
};

type Shop = {
  id: string;
  mainId?: string;
  categoryId: string;
  name?: string;
  title?: string;
  position: number;
  host: "kindsgut.de";
  basePath: "/shop/test2";
  baseUrl: null;
  hosts: "kindsgut.de";
  secure: true;
  templateId: 30;
  default: true;
  active: true;
  customerScope: true;
};

type Dispatch = {
  id: string;
  name: string;
  type: number;
  description: string;
  comment: string;
  active: boolean;
  position: number;
  calculation: number;
  surchargeCalculation: number;
  taxCalculation: number;
  shippingFree: string;
  multiShopId: number;
  customerGroupId: number;
  bindShippingFree: number;
  bindTimeFrom?: string;
  indTimeTo?: string;
  bindInStock?: string;
  bindLastStock: 0;
  bindWeekdayFrom?: string;
  bindWeekdayTo?: string;
  bindWeightFrom?: string;
  bindWeightTo?: string;
  bindPriceFrom?: string;
  bindPriceTo?: string;
  bindSql?: string;
  statusLink?: string;
  calculationSql?: string;
  attribute?: string;
  customerGroupName?: string;
};

type LanguageSubShop = {
  id: string;
  mainId: string;
  categoryId: string;
  name: string;
  title?: string;
  position: number;
  host: string;
  basePath: string;
  baseUrl?: string;
  hosts: string;
  secure: boolean;
  templateId: string;
  default: boolean;
  active: boolean;
  customerScope: boolean;
  locale: {
    id: number;
    locale: string;
    language: string;
    territory: string;
  };
};

export type OrderStatus = "canceled" | "complete" | "pending" | "rejected";

export interface Order {
  id: string;
  changed: string;
  number: string;
  customerId?: string;
  paymentId?: string;
  dispatchId?: string;
  partnerId?: string;
  shopId?: string;
  invoiceAmount: string;
  invoiceAmountNet: string;
  invoiceShipping?: string;
  invoiceShippingNet?: string;
  invoiceShippingTaxRate?: string;
  orderTime: string;
  transactionId?: string;
  comment?: string;
  customerComment: string;
  internalComment?: string;
  net?: string;
  taxFree?: string;
  temporaryId?: string;
  referer?: string;
  clearedDate?: string;
  trackingCode?: string;
  languageIso?: string;
  currency?: string;
  currencyFactor?: string;
  remoteAddress?: string;
  deviceType?: string;
  isProportionalCalculation?: boolean;
  details?: LineItem[];
  payment?: Payment;
  paymentStatus?: Status;
  orderStatus?: Status;
  customer?: Customer;
  paymentInstances?: PaymentInstance[];
  billing?: Billing;
  shipping?: Shipping;
  shop?: Shop;
  dispatch: Dispatch;
  languageSubShop?: LanguageSubShop;
  paymentStatusId?: string;
  orderStatusId?: string;
}
